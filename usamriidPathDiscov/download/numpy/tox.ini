# 'Tox' is a tool for automating sdist/build/test cycles against
# multiple Python versions:
#   http://pypi.python.org/pypi/tox
#   http://tox.testrun.org/

# Running the command 'tox' while in the root of the numpy source
# directory will:
#   - Create a numpy source distribution (setup.py sdist)
#   - Then for every supported version of Python:
#     - Create a virtualenv in .tox/py$VERSION and install
#       dependencies. (These virtualenvs are cached across runs unless
#       you use --recreate.)
#     - Use pip to install the numpy sdist into the virtualenv
#     - Run the numpy tests
# To run against a specific subset of Python versions, use:
#   tox -e py24,py27

# Extra arguments will be passed to test-installed-numpy.py. To run
# the full testsuite:
#   tox full
# To run with extra verbosity:
#   tox -- -v

# Tox assumes that you have appropriate Python interpreters already
# installed and that they can be run as 'python2.4', 'python2.5', etc.

[tox]
envlist = py24,py25,py26,py27,py31,py32,py27-separate,py32-separate

[testenv]
deps=
  nose
changedir={envdir}
commands=python {toxinidir}/tools/test-installed-numpy.py {posargs:}

[testenv:py27-separate]
basepython=python2.7
env=NPY_SEPARATE_COMPILATION=1

[testenv:py32-separate]
basepython=python3.2
env=NPY_SEPARATE_COMPILATION=1

# Not run by default. Set up the way you want then use 'tox -e debug'
# if you want it:
[testenv:debug]
basepython=PYTHON-WITH-DEBUG-INFO
commands=gdb --args {envpython} {toxinidir}/tools/test-installed-numpy.py {posargs:}
